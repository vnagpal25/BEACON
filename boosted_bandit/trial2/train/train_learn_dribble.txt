% Running on host: VanshLaptop

% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

% Calling ILPouterLoop from createRegressionOuterLooper.

% getInputArgWithDefaultValue: args=[train/train_pos.txt, train/train_neg.txt, train/train_bk.txt, train/train_facts.txt]
%  for N=0: args[N]=train/train_pos.txt

% getInputArgWithDefaultValue: args=[train/train_pos.txt, train/train_neg.txt, train/train_bk.txt, train/train_facts.txt]
%  for N=1: args[N]=train/train_neg.txt

% getInputArgWithDefaultValue: args=[train/train_pos.txt, train/train_neg.txt, train/train_bk.txt, train/train_facts.txt]
%  for N=2: args[N]=train/train_bk.txt

% getInputArgWithDefaultValue: args=[train/train_pos.txt, train/train_neg.txt, train/train_bk.txt, train/train_facts.txt]
%  for N=3: args[N]=train/train_facts.txt

% Welcome to the WILL ILP/SRL systems.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.
% Reading background theory from dir: null
% Load '../recs_bk.txt'.

% Switching to VarIndicator = uppercase.

***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****


***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****

% [ LazyGroundClauseIndex ]  Building full index for mode/1 with 1 assertions.

%  Read the facts.
%  Have read 93 facts.
% Have read 1,106 examples from 'train' [train/train*].
% Have read 393 examples from 'train' [train/train*].

%  LearnOneClause initialized.

% The outer looper has been created.

% Initializing the ILP inner looper.

% NEW target:                 recommendation(A, B)
%  targetPred:                recommendation/2
%  targetArgTypes:            signature = [const, const], types = [+user_name, +item_name]
%  targets:                   [recommendation(A, B)]
%  targetPredicates:          [recommendation/2]
%  targetArgSpecs:            [[A[+user_name], B[+item_name]]]
%  variablesInTargets:        [[A, B]]

% Started collecting constants

% Collecting the types of constants.

% Looking at the training examples to see if any types of new constants can be inferred.
% Time to collect constants: 16 milliseconds
% Time to collect examples: 0 seconds

% Read 1,106 pos examples and 393 neg examples.
% Time to init learnOneClause: 32 milliseconds
% Old dirnull
Setting model dir

% Have 1,106 'raw' positive examples and kept 1,106.
% Have 393 'raw' negative examples and kept 393.

% processing backup's for recommendation
%  POS EX = 1,106
%  NEG EX = 393

% Memory usage by WILLSetup (just counts # targets?):
%  |backupPosExamples| = 1
%  |backupNegExamples| = 1
%  |predicatesAsFacts| = 0
%  |addedToFactBase|   = 0
train/models/
File: train/advice.txt doesnt exist.Hence no advice loaded
% Learning 20 trees in this iteration for recommendation

% Learn model for: recommendation
% Kept 1,106 of the 1,106 positive examples.
% Kept 393 of the 393 negative examples.
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.19343916624870217
Set score:0.0025
% Dataset size: 1,499
Computing probabilities
prob time:8 milliseconds
No hidden examples for : recommendation
Time to build dataset: 8 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.19343916624872448
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 7 positive seeds: 2 162 180 296 371 1359 1366
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% LearnOneClause Parameters:
%   Targets (1):
%    recommendation(+user_name, +item_name)
%  Modes (4):
%    item(+item_name, +value),
%    item(+item_name, -value),
%    user(+user_name, +value),
%    user(+user_name, -value)

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]' score=-Infinity
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for item/2.
There is no fact nor clause nor built-in predicate matching: 'user/2'.
  Possibly a typo?  If not, add to the BK file:   okIfUnknown: user/2.

% Skipping over this 'waitHere': There is no fact nor clause nor built-in predicate matching: 'user/2'.
  Possibly a typo?  If not, add to the BK file:   okIfUnknown: user/2.
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -234.272801): recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]' score=-234.2728013582286
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272802 (regressionFit = 234.272800, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
Comparing variance: 0.24759707804689673 to score=0.0025 #egs=765.0
Comparing variance: 0.061118576869690175 to score=0.0025 #egs=734.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 765.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.247597)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.247597) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 734.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.061119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.061119) into the LAST position (#2) in the search queue.

% Time for loop #1: 154 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% This clause covers 765 positive examples, of which 765 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]'
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 45 206 341 362 409 414 470 497 501 530
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-234.2728013582286
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -234.2728):
%  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon61))

% Have these 10 positive seeds: 175 196 197 210 312 328 424 450 579 664
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon61))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #1 @ 21:07:15 5/25/24.  [Using 3,689,184 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.40716854294264493;  // std dev = 0.498, 765.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=420 */
%   else return 0.7927538397316602;  // std dev = 0.247, 734.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=686 */


% Clauses:

recommendation(A, B, 0.40716854294264493) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.7927538397316602) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.40716854294264493) :-  /* #neg=345 #pos=420 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.7927538397316602) :-  /* #neg=48 #pos=686 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 1 trees is 363 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.061118576869690244
Set score:0.0025
% Only 1499 out of 1499 converged.
% Kept 1,106 of the 1,106 positive examples.
% Kept 393 of the 393 negative examples.
% Dataset size: 1,499
Computing probabilities
prob time:16 milliseconds
No hidden examples for : recommendation
Time to build dataset: 66 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.18140109393072262
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 0 199 230 343 444 560 567 596 730 1044
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -234.272801): recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]' score=-234.27280135823958
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272802 (regressionFit = 234.272800, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
Comparing variance: 0.24759707804690656 to score=0.0025 #egs=765.0
Comparing variance: 0.06111857686969489 to score=0.0025 #egs=734.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 765.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.247597)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.247597) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 734.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.061119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.061119) into the LAST position (#2) in the search queue.

% Time for loop #1: 48 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% This clause covers 765 positive examples, of which 765 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]'
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 180 189 219 369 422 462 488 492 654 687
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-234.27280135823958
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -234.2728):
%  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon287))

% Have these 10 positive seeds: 9 303 315 384 418 560 636 657 664 700
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon287))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #2 @ 21:07:15 5/25/24.  [Using 3,993,688 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.3500634922839128;  // std dev = 0.498, 765.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=420 */
%   else return 0.6670857772886446;  // std dev = 0.247, 734.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=686 */


% Clauses:

recommendation(A, B, 0.3500634922839128) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.6670857772886446) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.3500634922839128) :-  /* #neg=345 #pos=420 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.6670857772886446) :-  /* #neg=48 #pos=686 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 2 trees is 595 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06111857686969491
Set score:0.0025
% Only 1499 out of 1499 converged.
% Kept 1,106 of the 1,106 positive examples.
% Kept 393 of the 393 negative examples.
% Dataset size: 1,499
Computing probabilities
prob time:16 milliseconds
No hidden examples for : recommendation
Time to build dataset: 32 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.16955499673141577
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 52 131 182 195 481 502 817 973 980 1024
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #3 @ 21:07:15 5/25/24.  [Using 4,204,840 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   return 0;  // std dev = 0.412, 1,499.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=1,106 */


% Clauses:

recommendation(A, B, 0) :- !. // Clause #1.


% The flattened versions of these clauses:

flattened_recommendation(underscore, underscore, 0) :-  /* #neg=393 #pos=1,106 */ 
   !. // Flattened version of clause #1.


% The unique flattened literals:

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 3 trees is 699 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.16955499673141577
Set score:0.0025
% Only 1499 out of 1499 converged.
% Kept 1,106 of the 1,106 positive examples.
% Kept 393 of the 393 negative examples.
% Dataset size: 1,499
Computing probabilities
prob time:24 milliseconds
No hidden examples for : recommendation
Time to build dataset: 49 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.16955499673141577
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 35 250 353 631 805 862 915 1153 1261 1343
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -234.272801): recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]' score=-234.27280135821766
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272802 (regressionFit = 234.272800, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
Comparing variance: 0.24759707804689635 to score=0.0025 #egs=765.0
Comparing variance: 0.061118576869675686 to score=0.0025 #egs=734.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 765.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.247597)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.247597) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 734.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.061119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.061119) into the LAST position (#2) in the search queue.

% Time for loop #1: 48 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% This clause covers 765 positive examples, of which 765 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]'
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Have these 6 positive seeds: 428 443 456 495 622 711
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-234.27280135821766
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -234.2728):
%  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon549))

% Have these 9 positive seeds: 11 81 91 155 197 219 394 503 614
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon549))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #4 @ 21:07:16 5/25/24.  [Using 4,249,872 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.2884033413945263;  // std dev = 0.498, 765.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=420 */
%   else return 0.5188343859847172;  // std dev = 0.247, 734.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=686 */


% Clauses:

recommendation(A, B, 0.2884033413945263) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.5188343859847172) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.2884033413945263) :-  /* #neg=345 #pos=420 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.5188343859847172) :-  /* #neg=48 #pos=686 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 4 trees is 927 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.0611185768696757
Set score:0.0025
% Only 1499 out of 1499 converged.
% Kept 1,106 of the 1,106 positive examples.
% Kept 393 of the 393 negative examples.
% Dataset size: 1,499
Computing probabilities
prob time:15 milliseconds
No hidden examples for : recommendation
Time to build dataset: 40 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.1627559960043357
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 5 positive seeds: 134 532 1102 1146 1435
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -234.272801): recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]' score=-234.27280135822633
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272802 (regressionFit = 234.272800, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
Comparing variance: 0.24759707804691022 to score=0.0025 #egs=765.0
Comparing variance: 0.061118576869673 to score=0.0025 #egs=734.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 765.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.247597)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.247597) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 734.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.061119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.061119) into the LAST position (#2) in the search queue.

% Time for loop #1: 40 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% This clause covers 765 positive examples, of which 765 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]'
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 25 52 236 307 351 376 392 525 556 562
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-234.27280135822633
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -234.2728):
%  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon775))

% Have these 10 positive seeds: 2 21 56 70 76 143 204 229 280 418
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon775))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #5 @ 21:07:16 5/25/24.  [Using 4,254,832 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.22914859192590217;  // std dev = 0.498, 765.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=420 */
%   else return 0.39005486031823694;  // std dev = 0.247, 734.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=686 */


% Clauses:

recommendation(A, B, 0.22914859192590217) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.39005486031823694) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.22914859192590217) :-  /* #neg=345 #pos=420 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.39005486031823694) :-  /* #neg=48 #pos=686 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 5 trees is 1.138 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06111857686967298
Set score:0.0025
% Only 1499 out of 1499 converged.
% Kept 1,106 of the 1,106 positive examples.
% Kept 393 of the 393 negative examples.
% Dataset size: 1,499
Computing probabilities
prob time:7 milliseconds
No hidden examples for : recommendation
Time to build dataset: 32 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.15980987171378222
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 12 16 175 256 306 364 810 1110 1261 1293
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -234.272801): recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]' score=-234.2728013582262
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272802 (regressionFit = 234.272800, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
Comparing variance: 0.247597078046905 to score=0.0025 #egs=765.0
Comparing variance: 0.06111857686967828 to score=0.0025 #egs=734.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 765.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.247597)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.247597) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 734.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.061119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.061119) into the LAST position (#2) in the search queue.

% Time for loop #1: 48 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% This clause covers 765 positive examples, of which 765 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]'
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Have these 7 positive seeds: 157 194 206 319 348 470 533
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-234.2728013582262
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -234.2728):
%  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon1001))

% Have these 8 positive seeds: 52 70 77 133 289 332 405 533
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon1001))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #6 @ 21:07:16 5/25/24.  [Using 4,278,400 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.1773862456356715;  // std dev = 0.498, 765.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=420 */
%   else return 0.2961350893430406;  // std dev = 0.247, 734.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=686 */


% Clauses:

recommendation(A, B, 0.1773862456356715) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.2961350893430406) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.1773862456356715) :-  /* #neg=345 #pos=420 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.2961350893430406) :-  /* #neg=48 #pos=686 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 6 trees is 1.324 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06111857686967828
Set score:0.0025
% Only 1499 out of 1499 converged.
% Kept 1,106 of the 1,106 positive examples.
% Kept 393 of the 393 negative examples.
% Dataset size: 1,499
Computing probabilities
prob time:16 milliseconds
No hidden examples for : recommendation
Time to build dataset: 48 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.15858035849367172
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 104 226 336 337 639 831 899 1002 1005 1470
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -234.272801): recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]' score=-234.27280135822218
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272802 (regressionFit = 234.272800, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
Comparing variance: 0.2475970780469002 to score=0.0025 #egs=765.0
Comparing variance: 0.06111857686967783 to score=0.0025 #egs=734.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 765.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.247597)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.247597) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 734.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.061119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.061119) into the LAST position (#2) in the search queue.

% Time for loop #1: 57 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% This clause covers 765 positive examples, of which 765 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]'
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 55 83 98 242 244 390 421 455 554 567
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-234.27280135822218
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -234.2728):
%  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon1227))

% Have these 10 positive seeds: 5 11 25 103 112 167 260 267 287 296
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon1227))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #7 @ 21:07:16 5/25/24.  [Using 4,284,192 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.13511081673477787;  // std dev = 0.498, 765.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=420 */
%   else return 0.23092903391113231;  // std dev = 0.247, 734.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=686 */


% Clauses:

recommendation(A, B, 0.13511081673477787) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.23092903391113231) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.13511081673477787) :-  /* #neg=345 #pos=420 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.23092903391113231) :-  /* #neg=48 #pos=686 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 7 trees is 1.559 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.061118576869677824
Set score:0.0025
% Only 1499 out of 1499 converged.
% Kept 1,106 of the 1,106 positive examples.
% Kept 393 of the 393 negative examples.
% Dataset size: 1,499
Computing probabilities
prob time:25 milliseconds
No hidden examples for : recommendation
Time to build dataset: 58 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.15801314113924558
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 301 336 657 916 918 944 1094 1193
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -234.272801): recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]' score=-234.27280135822855
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272802 (regressionFit = 234.272800, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
Comparing variance: 0.24759707804690786 to score=0.0025 #egs=765.0
Comparing variance: 0.061118576869678504 to score=0.0025 #egs=734.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 765.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.247597)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.247597) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 734.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.061119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.061119) into the LAST position (#2) in the search queue.

% Time for loop #1: 53 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% This clause covers 765 positive examples, of which 765 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]'
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Have these 8 positive seeds: 220 271 339 377 442 514 711 752
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-234.27280135822855
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -234.2728):
%  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon1453))

% Have these 10 positive seeds: 136 256 281 293 313 334 379 400 462 463
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon1453))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #8 @ 21:07:16 5/25/24.  [Using 4,315,976 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.10199972425168541;  // std dev = 0.498, 765.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=420 */
%   else return 0.18513389627057167;  // std dev = 0.247, 734.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=686 */


% Clauses:

recommendation(A, B, 0.10199972425168541) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.18513389627057167) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.10199972425168541) :-  /* #neg=345 #pos=420 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.18513389627057167) :-  /* #neg=48 #pos=686 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 8 trees is 1.841 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06111857686967851
Set score:0.0025
% Only 1499 out of 1499 converged.
% Kept 1,106 of the 1,106 positive examples.
% Kept 393 of the 393 negative examples.
% Dataset size: 1,499
Computing probabilities
prob time:16 milliseconds
No hidden examples for : recommendation
Time to build dataset: 49 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.1577039605116507
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 24 109 245 319 554 585 596 856 950 978
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -234.272801): recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]' score=-234.27280135822502
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272802 (regressionFit = 234.272800, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
Comparing variance: 0.24759707804690387 to score=0.0025 #egs=765.0
Comparing variance: 0.06111857686967788 to score=0.0025 #egs=734.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 765.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.247597)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.247597) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 734.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.061119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.061119) into the LAST position (#2) in the search queue.

% Time for loop #1: 43 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% This clause covers 765 positive examples, of which 765 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]'
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 110 253 300 378 444 494 503 575 676 679
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-234.27280135822502
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -234.2728):
%  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon1679))

% Have these 10 positive seeds: 68 102 134 183 227 268 286 340 345 361
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon1679))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #9 @ 21:07:17 5/25/24.  [Using 4,326,392 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.07667117701171229;  // std dev = 0.498, 765.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=420 */
%   else return 0.15199739354802705;  // std dev = 0.247, 734.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=686 */


% Clauses:

recommendation(A, B, 0.07667117701171229) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.15199739354802705) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.07667117701171229) :-  /* #neg=345 #pos=420 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.15199739354802705) :-  /* #neg=48 #pos=686 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 9 trees is 2.052 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.061118576869677886
Set score:0.0025
% Only 1499 out of 1499 converged.
% Kept 1,106 of the 1,106 positive examples.
% Kept 393 of the 393 negative examples.
% Dataset size: 1,499
Computing probabilities
prob time:16 milliseconds
No hidden examples for : recommendation
Time to build dataset: 33 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.15750067227609146
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 27 379 945 1041 1069 1089 1251 1322 1340 1367
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -234.272801): recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]' score=-234.27280135822335
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272802 (regressionFit = 234.272800, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
Comparing variance: 0.247597078046902 to score=0.0025 #egs=765.0
Comparing variance: 0.06111857686967751 to score=0.0025 #egs=734.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 765.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.247597)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.247597) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 734.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.061119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.061119) into the LAST position (#2) in the search queue.

% Time for loop #1: 33 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% This clause covers 765 positive examples, of which 765 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]'
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 94 138 168 292 410 451 544 599 600 704
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-234.27280135822335
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -234.2728):
%  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon1905))

% Have these 10 positive seeds: 12 13 197 230 235 256 270 505 531 563
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon1905))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #10 @ 21:07:17 5/25/24.  [Using 4,328,736 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.05753080258209654;  // std dev = 0.498, 765.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=420 */
%   else return 0.12724836160738684;  // std dev = 0.247, 734.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=686 */


% Clauses:

recommendation(A, B, 0.05753080258209654) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.12724836160738684) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.05753080258209654) :-  /* #neg=345 #pos=420 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.12724836160738684) :-  /* #neg=48 #pos=686 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Saving model in: train/models/bRDNs/recommendation.model
% Time taken to learn 10 trees is 2.219 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.061118576869677504
Set score:0.0025
% Only 1499 out of 1499 converged.
% Kept 1,106 of the 1,106 positive examples.
% Kept 393 of the 393 negative examples.
% Dataset size: 1,499
Computing probabilities
prob time:17 milliseconds
No hidden examples for : recommendation
Time to build dataset: 49 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.15734437771259577
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 293 512 609 815 847 994 1008 1062 1294 1314
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -234.272801): recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]' score=-234.27280135822735
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 1 bad extensions.

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
Comparing variance: 0.2475970780469073 to score=0.0025 #egs=765.0
Comparing variance: 0.06111857686967749 to score=0.0025 #egs=734.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 765.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.247597)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.247597) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 734.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.061119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.061119) into the LAST position (#2) in the search queue.

% Time for loop #1: 41 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% This clause covers 765 positive examples, of which 765 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]'
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 32 111 122 158 217 260 291 402 406 502
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-234.27280135822735
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -234.2728):
%  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon2131))

% Have these 6 positive seeds: 54 312 341 432 572 640
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon2131))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 21:07:17 5/25/24.  [Using 4,331,112 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.04314919391443957;  // std dev = 0.498, 765.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=420 */
%   else return 0.10822678061740022;  // std dev = 0.247, 734.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=686 */


% Clauses:

recommendation(A, B, 0.04314919391443957) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.10822678061740022) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.04314919391443957) :-  /* #neg=345 #pos=420 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.10822678061740022) :-  /* #neg=48 #pos=686 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 11 trees is 2.419 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06111857686967749
Set score:0.0025
% Only 1499 out of 1499 converged.
% Kept 1,106 of the 1,106 positive examples.
% Kept 393 of the 393 negative examples.
% Dataset size: 1,499
Computing probabilities
prob time:24 milliseconds
No hidden examples for : recommendation
Time to build dataset: 40 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.15721209695481944
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 117 579 629 759 853 919
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -234.272801): recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]' score=-234.27280135822457
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272802 (regressionFit = 234.272800, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
Comparing variance: 0.24759707804690353 to score=0.0025 #egs=765.0
Comparing variance: 0.061118576869677595 to score=0.0025 #egs=734.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 765.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.247597)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.247597) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 734.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.061119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.061119) into the LAST position (#2) in the search queue.

% Time for loop #1: 32 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% This clause covers 765 positive examples, of which 765 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]'
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 172 220 268 277 284 291 296 308 330 347
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-234.27280135822457
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -234.2728):
%  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon2341))

% Have these 10 positive seeds: 100 162 172 178 203 260 270 290 456 505
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon2341))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #12 @ 21:07:17 5/25/24.  [Using 4,367,832 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.03236778613377572;  // std dev = 0.498, 765.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=420 */
%   else return 0.09324259921120787;  // std dev = 0.247, 734.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=686 */


% Clauses:

recommendation(A, B, 0.03236778613377572) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.09324259921120787) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.03236778613377572) :-  /* #neg=345 #pos=420 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.09324259921120787) :-  /* #neg=48 #pos=686 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 12 trees is 2.589 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06111857686967761
Set score:0.0025
% Only 1499 out of 1499 converged.
% Kept 1,106 of the 1,106 positive examples.
% Kept 393 of the 393 negative examples.
% Dataset size: 1,499
Computing probabilities
prob time:25 milliseconds
No hidden examples for : recommendation
Time to build dataset: 41 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.15709510920712838
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 73 106 149 409 448 468 603 697 786 1006
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -234.272801): recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]' score=-234.2728013582242
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 1 bad extensions.

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
Comparing variance: 0.24759707804690295 to score=0.0025 #egs=765.0
Comparing variance: 0.061118576869677706 to score=0.0025 #egs=734.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 765.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.247597)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.247597) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 734.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.061119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.061119) into the LAST position (#2) in the search queue.

% Time for loop #1: 24 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% This clause covers 765 positive examples, of which 765 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]'
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 0 19 103 142 212 323 335 433 475 483
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-234.2728013582242
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -234.2728):
%  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon2567))

% Have these 10 positive seeds: 181 205 226 229 259 328 350 389 410 423
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon2567))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #13 @ 21:07:17 5/25/24.  [Using 4,370,688 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.02428987373578187;  // std dev = 0.498, 765.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=420 */
%   else return 0.08118971254923635;  // std dev = 0.247, 734.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=686 */


% Clauses:

recommendation(A, B, 0.02428987373578187) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.08118971254923635) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.02428987373578187) :-  /* #neg=345 #pos=420 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.08118971254923635) :-  /* #neg=48 #pos=686 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 13 trees is 2.768 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06111857686967771
Set score:0.0025
% Only 1499 out of 1499 converged.
% Kept 1,106 of the 1,106 positive examples.
% Kept 393 of the 393 negative examples.
% Dataset size: 1,499
Computing probabilities
prob time:25 milliseconds
No hidden examples for : recommendation
Time to build dataset: 41 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.15699027222790093
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 74 239 507 557 675 899 1004 1071 1179 1215
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -234.272801): recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]' score=-234.27280135822798
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272802 (regressionFit = 234.272800, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
Comparing variance: 0.24759707804690798 to score=0.0025 #egs=765.0
Comparing variance: 0.061118576869677636 to score=0.0025 #egs=734.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 765.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.247597)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.247597) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 734.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.061119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.061119) into the LAST position (#2) in the search queue.

% Time for loop #1: 33 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% This clause covers 765 positive examples, of which 765 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]'
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 102 132 154 189 206 226 251 280 321 331
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-234.27280135822798
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -234.2728):
%  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon2777))

% Have these 9 positive seeds: 202 260 319 334 417 432 556 560 701
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon2777))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #14 @ 21:07:18 5/25/24.  [Using 4,373,000 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.018236193983405268;  // std dev = 0.498, 765.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=420 */
%   else return 0.07132163752614948;  // std dev = 0.247, 734.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=686 */


% Clauses:

recommendation(A, B, 0.018236193983405268) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.07132163752614948) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.018236193983405268) :-  /* #neg=345 #pos=420 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.07132163752614948) :-  /* #neg=48 #pos=686 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 14 trees is 2.941 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06111857686967763
Set score:0.0025
% Only 1499 out of 1499 converged.
% Kept 1,106 of the 1,106 positive examples.
% Kept 393 of the 393 negative examples.
% Dataset size: 1,499
Computing probabilities
prob time:25 milliseconds
No hidden examples for : recommendation
Time to build dataset: 41 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.156896448736543
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 9 positive seeds: 55 196 296 687 838 881 1190 1256 1370
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -234.272801): recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]' score=-234.2728013582233
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272802 (regressionFit = 234.272800, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
Comparing variance: 0.24759707804690212 to score=0.0025 #egs=765.0
Comparing variance: 0.06111857686967732 to score=0.0025 #egs=734.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 765.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.247597)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.247597) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 734.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.061119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.061119) into the LAST position (#2) in the search queue.

% Time for loop #1: 34 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% This clause covers 765 positive examples, of which 765 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]'
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Have these 7 positive seeds: 3 183 253 375 418 494 627
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-234.2728013582233
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -234.2728):
%  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon3003))

% Have these 10 positive seeds: 46 201 210 270 309 321 329 342 378 440
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon3003))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #15 @ 21:07:18 5/25/24.  [Using 4,375,424 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.013697100357306728;  // std dev = 0.498, 765.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=420 */
%   else return 0.06311986612250184;  // std dev = 0.247, 734.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=686 */


% Clauses:

recommendation(A, B, 0.013697100357306728) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.06311986612250184) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.013697100357306728) :-  /* #neg=345 #pos=420 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.06311986612250184) :-  /* #neg=48 #pos=686 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 15 trees is 3.120 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06111857686967732
Set score:0.0025
% Only 1499 out of 1499 converged.
% Kept 1,106 of the 1,106 positive examples.
% Kept 393 of the 393 negative examples.
% Dataset size: 1,499
Computing probabilities
prob time:25 milliseconds
No hidden examples for : recommendation
Time to build dataset: 46 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.156813064791489
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 7 positive seeds: 310 486 487 869 922 960 993
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -234.272801): recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]' score=-234.27280135822878
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272802 (regressionFit = 234.272800, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
Comparing variance: 0.24759707804690914 to score=0.0025 #egs=765.0
Comparing variance: 0.06111857686967745 to score=0.0025 #egs=734.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 765.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.247597)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.247597) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 734.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.061119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.061119) into the LAST position (#2) in the search queue.

% Time for loop #1: 41 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% This clause covers 765 positive examples, of which 765 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]'
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 27 39 68 116 212 277 289 416 616 630
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-234.27280135822878
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -234.2728):
%  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon3229))

% Have these 4 positive seeds: 78 85 495 596
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon3229))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #16 @ 21:07:18 5/25/24.  [Using 4,378,192 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.010291615729402319;  // std dev = 0.498, 765.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=420 */
%   else return 0.056214717624209716;  // std dev = 0.247, 734.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=686 */


% Clauses:

recommendation(A, B, 0.010291615729402319) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.056214717624209716) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.010291615729402319) :-  /* #neg=345 #pos=420 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.056214717624209716) :-  /* #neg=48 #pos=686 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 16 trees is 3.333 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.061118576869677456
Set score:0.0025
% Only 1499 out of 1499 converged.
% Kept 1,106 of the 1,106 positive examples.
% Kept 393 of the 393 negative examples.
% Dataset size: 1,499
Computing probabilities
prob time:25 milliseconds
No hidden examples for : recommendation
Time to build dataset: 49 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.15673957917956574
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 9 positive seeds: 46 317 365 681 821 1151 1167 1263 1347
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -234.272801): recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]' score=-234.2728013582262
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272802 (regressionFit = 234.272800, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
Comparing variance: 0.24759707804690567 to score=0.0025 #egs=765.0
Comparing variance: 0.06111857686967758 to score=0.0025 #egs=734.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 765.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.247597)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.247597) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 734.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.061119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.061119) into the LAST position (#2) in the search queue.

% Time for loop #1: 33 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% This clause covers 765 positive examples, of which 765 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]'
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 89 97 129 161 185 195 312 403 476 547
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-234.2728013582262
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -234.2728):
%  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon3455))

% Have these 10 positive seeds: 11 32 241 267 301 364 390 424 428 435
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon3455))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #17 @ 21:07:18 5/25/24.  [Using 4,380,880 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.007735189241048123;  // std dev = 0.498, 765.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=420 */
%   else return 0.05033639899527499;  // std dev = 0.247, 734.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=686 */


% Clauses:

recommendation(A, B, 0.007735189241048123) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.05033639899527499) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.007735189241048123) :-  /* #neg=345 #pos=420 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.05033639899527499) :-  /* #neg=48 #pos=686 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 17 trees is 3.527 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06111857686967758
Set score:0.0025
% Only 1499 out of 1499 converged.
% Kept 1,106 of the 1,106 positive examples.
% Kept 393 of the 393 negative examples.
% Dataset size: 1,499
Computing probabilities
prob time:24 milliseconds
No hidden examples for : recommendation
Time to build dataset: 40 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.1566753351618202
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 656 730 1040 1214 1394 1468
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -234.272801): recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]' score=-234.2728013582233
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272802 (regressionFit = 234.272800, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
Comparing variance: 0.24759707804690198 to score=0.0025 #egs=765.0
Comparing variance: 0.06111857686967746 to score=0.0025 #egs=734.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 765.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.247597)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.247597) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 734.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.061119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.061119) into the LAST position (#2) in the search queue.

% Time for loop #1: 27 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% This clause covers 765 positive examples, of which 765 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]'
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Have these 9 positive seeds: 1 17 143 155 245 394 469 551 681
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-234.2728013582233
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -234.2728):
%  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon3681))

% Have these 10 positive seeds: 6 31 224 244 252 275 294 300 335 397
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon3681))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #18 @ 21:07:18 5/25/24.  [Using 4,434,432 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.005815198520669114;  // std dev = 0.498, 765.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=420 */
%   else return 0.04528388295155609;  // std dev = 0.247, 734.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=686 */


% Clauses:

recommendation(A, B, 0.005815198520669114) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.04528388295155609) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.005815198520669114) :-  /* #neg=345 #pos=420 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.04528388295155609) :-  /* #neg=48 #pos=686 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 18 trees is 3.731 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.061118576869677456
Set score:0.0025
% Only 1499 out of 1499 converged.
% Kept 1,106 of the 1,106 positive examples.
% Kept 393 of the 393 negative examples.
% Dataset size: 1,499
Computing probabilities
prob time:25 milliseconds
No hidden examples for : recommendation
Time to build dataset: 65 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.1566195608662197
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 7 positive seeds: 382 521 546 637 638 1136 1336
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -234.272801): recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]' score=-234.27280135822605
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272802 (regressionFit = 234.272800, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
Comparing variance: 0.24759707804690548 to score=0.0025 #egs=765.0
Comparing variance: 0.06111857686967759 to score=0.0025 #egs=734.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 765.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.247597)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.247597) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 734.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.061119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.061119) into the LAST position (#2) in the search queue.

% Time for loop #1: 34 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% This clause covers 765 positive examples, of which 765 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]'
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Have these 8 positive seeds: 212 403 414 422 454 580 700 762
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-234.27280135822605
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -234.2728):
%  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon3907))

% Have these 7 positive seeds: 29 56 424 483 519 543 648
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon3907))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #19 @ 21:07:19 5/25/24.  [Using 4,439,192 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.0043726201639244676;  // std dev = 0.498, 765.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=420 */
%   else return 0.04090458442819029;  // std dev = 0.247, 734.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=686 */


% Clauses:

recommendation(A, B, 0.0043726201639244676) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.04090458442819029) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.0043726201639244676) :-  /* #neg=345 #pos=420 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.04090458442819029) :-  /* #neg=48 #pos=686 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 19 trees is 3.968 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.061118576869677595
Set score:0.0025
% Only 1499 out of 1499 converged.
% Kept 1,106 of the 1,106 positive examples.
% Kept 393 of the 393 negative examples.
% Dataset size: 1,499
Computing probabilities
prob time:48 milliseconds
No hidden examples for : recommendation
Time to build dataset: 74 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.1565714163359375
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 0 59 91 109 630 666 773 950 955 1394
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,499.0/1,499.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -234.272801): recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]' score=-234.27280135822488
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -234.272802 (regressionFit = 234.272800, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
Comparing variance: 0.24759707804690406 to score=0.0025 #egs=765.0
Comparing variance: 0.06111857686967746 to score=0.0025 #egs=734.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 765.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.247597)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.247597) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 734.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.061119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.061119) into the LAST position (#2) in the search queue.

% Time for loop #1: 39 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 765.0/1,499.0 pos, 0.0/0.0 neg]
% This clause covers 765 positive examples, of which 765 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]'
%     Score = -234.272801 (regressionFit = 234.272800, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 80 268 300 339 357 378 379 393 459 582
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-234.27280135822488
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -234.2728):
%  recommendation(_, A) :- item(A, _).  [covers 765.0/765.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon4133))

% Have these 9 positive seeds: 22 88 134 288 361 440 582 600 607
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 734.0/734.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon4133))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #20 @ 21:07:19 5/25/24.  [Using 4,442,032 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.003288394695388915;  // std dev = 0.498, 765.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=420 */
%   else return 0.03708075913773193;  // std dev = 0.247, 734.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=686 */


% Clauses:

recommendation(A, B, 0.003288394695388915) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.03708075913773193) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.003288394695388915) :-  /* #neg=345 #pos=420 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.03708075913773193) :-  /* #neg=48 #pos=686 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Saving model in: train/models/bRDNs/recommendation.model


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for recommendation.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).
stepLength_tree4(1.0).
stepLength_tree5(1.0).
stepLength_tree6(1.0).
stepLength_tree7(1.0).
stepLength_tree8(1.0).
stepLength_tree9(1.0).
stepLength_tree10(1.0).
stepLength_tree11(1.0).
stepLength_tree12(1.0).
stepLength_tree13(1.0).
stepLength_tree14(1.0).
stepLength_tree15(1.0).
stepLength_tree16(1.0).
stepLength_tree17(1.0).
stepLength_tree18(1.0).
stepLength_tree19(1.0).
stepLength_tree20(1.0).

logPrior(-1.8).
recommendation(A, B, Total) :- // A general accessor. 
   recommendation(A, B, 1000000, Total), !.
recommendation(A, B, Total) :- waitHere("This should not fail", recommendation(A, B, Total)).

recommendation(A, B, TreesToUse, Total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(LogPrior),
   getScore_recommendation_tree1(A, B, TreesToUse, Total1),
   getScore_recommendation_tree2(A, B, TreesToUse, Total2),
   getScore_recommendation_tree3(A, B, TreesToUse, Total3),
   getScore_recommendation_tree4(A, B, TreesToUse, Total4),
   getScore_recommendation_tree5(A, B, TreesToUse, Total5),
   getScore_recommendation_tree6(A, B, TreesToUse, Total6),
   getScore_recommendation_tree7(A, B, TreesToUse, Total7),
   getScore_recommendation_tree8(A, B, TreesToUse, Total8),
   getScore_recommendation_tree9(A, B, TreesToUse, Total9),
   getScore_recommendation_tree10(A, B, TreesToUse, Total10),
   getScore_recommendation_tree11(A, B, TreesToUse, Total11),
   getScore_recommendation_tree12(A, B, TreesToUse, Total12),
   getScore_recommendation_tree13(A, B, TreesToUse, Total13),
   getScore_recommendation_tree14(A, B, TreesToUse, Total14),
   getScore_recommendation_tree15(A, B, TreesToUse, Total15),
   getScore_recommendation_tree16(A, B, TreesToUse, Total16),
   getScore_recommendation_tree17(A, B, TreesToUse, Total17),
   getScore_recommendation_tree18(A, B, TreesToUse, Total18),
   getScore_recommendation_tree19(A, B, TreesToUse, Total19),
   getScore_recommendation_tree20(A, B, TreesToUse, Total20),
   Total is LogPrior + Total1 + Total2 + Total3 + Total4 + Total5 + Total6 + Total7 + Total8 + Total9 + Total10 + Total11 + Total12 + Total13 + Total14 + Total15 + Total16 + Total17 + Total18 + Total19 + Total20,
   !.
recommendation(A, B, TreesToUse, Total) :- waitHere("This should not fail", recommendation(A, B, TreesToUse, Total)).

getScore_recommendation_tree1(A, B, TreesToUse, 0.0) :- 1 > TreesToUse, !.
getScore_recommendation_tree1(A, B, TreesToUse, Total1) :- recommendation_tree1(A, B, Total), stepLength_tree1(StepLen), Total1 is Total * StepLen.

getScore_recommendation_tree2(A, B, TreesToUse, 0.0) :- 2 > TreesToUse, !.
getScore_recommendation_tree2(A, B, TreesToUse, Total2) :- recommendation_tree2(A, B, Total), stepLength_tree2(StepLen), Total2 is Total * StepLen.

getScore_recommendation_tree3(A, B, TreesToUse, 0.0) :- 3 > TreesToUse, !.
getScore_recommendation_tree3(A, B, TreesToUse, Total3) :- recommendation_tree3(A, B, Total), stepLength_tree3(StepLen), Total3 is Total * StepLen.

getScore_recommendation_tree4(A, B, TreesToUse, 0.0) :- 4 > TreesToUse, !.
getScore_recommendation_tree4(A, B, TreesToUse, Total4) :- recommendation_tree4(A, B, Total), stepLength_tree4(StepLen), Total4 is Total * StepLen.

getScore_recommendation_tree5(A, B, TreesToUse, 0.0) :- 5 > TreesToUse, !.
getScore_recommendation_tree5(A, B, TreesToUse, Total5) :- recommendation_tree5(A, B, Total), stepLength_tree5(StepLen), Total5 is Total * StepLen.

getScore_recommendation_tree6(A, B, TreesToUse, 0.0) :- 6 > TreesToUse, !.
getScore_recommendation_tree6(A, B, TreesToUse, Total6) :- recommendation_tree6(A, B, Total), stepLength_tree6(StepLen), Total6 is Total * StepLen.

getScore_recommendation_tree7(A, B, TreesToUse, 0.0) :- 7 > TreesToUse, !.
getScore_recommendation_tree7(A, B, TreesToUse, Total7) :- recommendation_tree7(A, B, Total), stepLength_tree7(StepLen), Total7 is Total * StepLen.

getScore_recommendation_tree8(A, B, TreesToUse, 0.0) :- 8 > TreesToUse, !.
getScore_recommendation_tree8(A, B, TreesToUse, Total8) :- recommendation_tree8(A, B, Total), stepLength_tree8(StepLen), Total8 is Total * StepLen.

getScore_recommendation_tree9(A, B, TreesToUse, 0.0) :- 9 > TreesToUse, !.
getScore_recommendation_tree9(A, B, TreesToUse, Total9) :- recommendation_tree9(A, B, Total), stepLength_tree9(StepLen), Total9 is Total * StepLen.

getScore_recommendation_tree10(A, B, TreesToUse, 0.0) :- 10 > TreesToUse, !.
getScore_recommendation_tree10(A, B, TreesToUse, Total10) :- recommendation_tree10(A, B, Total), stepLength_tree10(StepLen), Total10 is Total * StepLen.

getScore_recommendation_tree11(A, B, TreesToUse, 0.0) :- 11 > TreesToUse, !.
getScore_recommendation_tree11(A, B, TreesToUse, Total11) :- recommendation_tree11(A, B, Total), stepLength_tree11(StepLen), Total11 is Total * StepLen.

getScore_recommendation_tree12(A, B, TreesToUse, 0.0) :- 12 > TreesToUse, !.
getScore_recommendation_tree12(A, B, TreesToUse, Total12) :- recommendation_tree12(A, B, Total), stepLength_tree12(StepLen), Total12 is Total * StepLen.

getScore_recommendation_tree13(A, B, TreesToUse, 0.0) :- 13 > TreesToUse, !.
getScore_recommendation_tree13(A, B, TreesToUse, Total13) :- recommendation_tree13(A, B, Total), stepLength_tree13(StepLen), Total13 is Total * StepLen.

getScore_recommendation_tree14(A, B, TreesToUse, 0.0) :- 14 > TreesToUse, !.
getScore_recommendation_tree14(A, B, TreesToUse, Total14) :- recommendation_tree14(A, B, Total), stepLength_tree14(StepLen), Total14 is Total * StepLen.

getScore_recommendation_tree15(A, B, TreesToUse, 0.0) :- 15 > TreesToUse, !.
getScore_recommendation_tree15(A, B, TreesToUse, Total15) :- recommendation_tree15(A, B, Total), stepLength_tree15(StepLen), Total15 is Total * StepLen.

getScore_recommendation_tree16(A, B, TreesToUse, 0.0) :- 16 > TreesToUse, !.
getScore_recommendation_tree16(A, B, TreesToUse, Total16) :- recommendation_tree16(A, B, Total), stepLength_tree16(StepLen), Total16 is Total * StepLen.

getScore_recommendation_tree17(A, B, TreesToUse, 0.0) :- 17 > TreesToUse, !.
getScore_recommendation_tree17(A, B, TreesToUse, Total17) :- recommendation_tree17(A, B, Total), stepLength_tree17(StepLen), Total17 is Total * StepLen.

getScore_recommendation_tree18(A, B, TreesToUse, 0.0) :- 18 > TreesToUse, !.
getScore_recommendation_tree18(A, B, TreesToUse, Total18) :- recommendation_tree18(A, B, Total), stepLength_tree18(StepLen), Total18 is Total * StepLen.

getScore_recommendation_tree19(A, B, TreesToUse, 0.0) :- 19 > TreesToUse, !.
getScore_recommendation_tree19(A, B, TreesToUse, Total19) :- recommendation_tree19(A, B, Total), stepLength_tree19(StepLen), Total19 is Total * StepLen.

getScore_recommendation_tree20(A, B, TreesToUse, 0.0) :- 20 > TreesToUse, !.
getScore_recommendation_tree20(A, B, TreesToUse, Total20) :- recommendation_tree20(A, B, Total), stepLength_tree20(StepLen), Total20 is Total * StepLen.

flattenedLiteralsInThisSetOfTrees(recommendation, 1, [
   item(a, underscore)]).
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:63.780405034600896
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 1279 3532 7376 9219 11168 17628 20357 21618 23944 24163
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 29,980.0/29,980.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 29,980.0/29,980.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 29,980.0/29,980.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -1,874,182.401027 (regressionFit = 1,874,182.401026, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 15,300.0/29,980.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -1,874,182.401027): recommendation(_, A) :- item(A, _).  [covers 15,300.0/29,980.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 15,300.0/29,980.0 pos, 0.0/0.0 neg]' score=-1874182.4010273588
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -1,874,182.401028 (regressionFit = 1,874,182.401026, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 15,300.0/29,980.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 15,300.0/29,980.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 15,300.0/29,980.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 15,300.0/29,980.0 pos, 0.0/0.0 neg]
Comparing variance: 99.03883121877573 to score=0.0025 #egs=15300.0
Comparing variance: 24.44743074787877 to score=0.0025 #egs=14680.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 15,300.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-99.038831)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 15,300.0/29,980.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -99.038831) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 14,680.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-24.447431)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -24.447431) into the LAST position (#2) in the search queue.

% Time for loop #1: 382 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 15,300.0/29,980.0 pos, 0.0/0.0 neg]
% This clause covers 15300 positive examples, of which 15300 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 15,300.0/15,300.0 pos, 0.0/0.0 neg]'
%     Score = -1,874,182.401027 (regressionFit = 1,874,182.401026, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 15,300.0/15,300.0 pos, 0.0/0.0 neg]

% Have these 9 positive seeds: 2552 3158 5220 10208 10962 11010 11217 12485 13098
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 15,300.0/15,300.0 pos, 0.0/0.0 neg]' score=-1874182.4010273588
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 15,300.0/15,300.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 15,300.0/15,300.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 15,300.0/15,300.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -1,874,182.4010):
%  recommendation(_, A) :- item(A, _).  [covers 15,300.0/15,300.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon4359))

% Have these 9 positive seeds: 1565 3832 6757 7184 7925 9526 10428 12965 13061
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 14,680.0/14,680.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 14,680.0/14,680.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 14,680.0/14,680.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon4359))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 21:07:19 5/25/24.  [Using 4,277,456 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 2.275129242632452;  // std dev = 9.952, 15,300.000 (wgt'ed) examples reached here.  /* #neg=6,900 #pos=8,400 */
%   else return 4.525927963150429;  // std dev = 4.944, 14,680.000 (wgt'ed) examples reached here.  /* #neg=960 #pos=13,720 */


% Clauses:

recommendation(A, B, 2.275129242632452) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 4.525927963150429) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 2.275129242632452) :-  /* #neg=6,900 #pos=8,400 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 4.525927963150429) :-  /* #neg=960 #pos=13,720 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Time taken to learn model for 'recommendation': 4.885 seconds.
% Saving model in: train/models/bRDNs/recommendation.model
cached groundings hit: 0
Misses: 0

% Total learning time (20 trees): 5.183 seconds.
