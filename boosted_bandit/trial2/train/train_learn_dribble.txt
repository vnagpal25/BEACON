% Running on host: VanshLaptop

% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

% Calling ILPouterLoop from createRegressionOuterLooper.

% getInputArgWithDefaultValue: args=[train/train_pos.txt, train/train_neg.txt, train/train_bk.txt, train/train_facts.txt]
%  for N=0: args[N]=train/train_pos.txt

% getInputArgWithDefaultValue: args=[train/train_pos.txt, train/train_neg.txt, train/train_bk.txt, train/train_facts.txt]
%  for N=1: args[N]=train/train_neg.txt

% getInputArgWithDefaultValue: args=[train/train_pos.txt, train/train_neg.txt, train/train_bk.txt, train/train_facts.txt]
%  for N=2: args[N]=train/train_bk.txt

% getInputArgWithDefaultValue: args=[train/train_pos.txt, train/train_neg.txt, train/train_bk.txt, train/train_facts.txt]
%  for N=3: args[N]=train/train_facts.txt

% Welcome to the WILL ILP/SRL systems.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.
% Reading background theory from dir: null
% Load '../recs_bk.txt'.

% Switching to VarIndicator = uppercase.

***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****


***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****

% [ LazyGroundClauseIndex ]  Building full index for mode/1 with 1 assertions.

%  Read the facts.
%  Have read 64 facts.
% Have read 1,329 examples from 'train' [train/train*].
% Have read 110 examples from 'train' [train/train*].

%  LearnOneClause initialized.

% The outer looper has been created.

% Initializing the ILP inner looper.

% NEW target:                 recommendation(A, B)
%  targetPred:                recommendation/2
%  targetArgTypes:            signature = [const, const], types = [+user_name, +item_name]
%  targets:                   [recommendation(A, B)]
%  targetPredicates:          [recommendation/2]
%  targetArgSpecs:            [[A[+user_name], B[+item_name]]]
%  variablesInTargets:        [[A, B]]

% Started collecting constants

% Collecting the types of constants.

% Looking at the training examples to see if any types of new constants can be inferred.
% Time to collect constants: 11 milliseconds
% Time to collect examples: 0 seconds

% Read 1,329 pos examples and 110 neg examples.
% Time to init learnOneClause: 15 milliseconds
% Old dirnull
Setting model dir

% Have 1,329 'raw' positive examples and kept 1,329.
% Have 110 'raw' negative examples and kept 110.

% processing backup's for recommendation
%  POS EX = 1,329
%  NEG EX = 110

% Memory usage by WILLSetup (just counts # targets?):
%  |backupPosExamples| = 1
%  |backupNegExamples| = 1
%  |predicatesAsFacts| = 0
%  |addedToFactBase|   = 0
train/models/
File: train/advice.txt doesnt exist.Hence no advice loaded
% Learning 20 trees in this iteration for recommendation

% Learn model for: recommendation
% Kept 1,329 of the 1,329 positive examples.
% Kept 110 of the 110 negative examples.
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.07059859826601456
Set score:0.0025
% Dataset size: 1,439
Computing probabilities
prob time:3 milliseconds
No hidden examples for : recommendation
Time to build dataset: 4 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.07059859826603676
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 8 428 498 597 618 713 762 843 1069 1084
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% LearnOneClause Parameters:
%   Targets (1):
%    recommendation(+user_name, +item_name)
%  Modes (4):
%    item(+item_name, +value),
%    item(+item_name, -value),
%    user(+user_name, +value),
%    user(+user_name, -value)

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]' score=-Infinity
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for item/2.
There is no fact nor clause nor built-in predicate matching: 'user/2'.
  Possibly a typo?  If not, add to the BK file:   okIfUnknown: user/2.

% Skipping over this 'waitHere': There is no fact nor clause nor built-in predicate matching: 'user/2'.
  Possibly a typo?  If not, add to the BK file:   okIfUnknown: user/2.
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -96.157568): recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]' score=-96.15756757190762
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157569 (regressionFit = 96.157566, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
Comparing variance: 0.12067077014583556 to score=0.0025 #egs=691.0
Comparing variance: 0.01707762589723964 to score=0.0025 #egs=748.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 691.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.120671)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.120671) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 748.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017078) into the LAST position (#2) in the search queue.

% Time for loop #1: 97 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% This clause covers 691 positive examples, of which 691 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]'
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Have these 8 positive seeds: 144 205 312 425 492 584 587 679
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-96.15756757190762
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -96.1576):
%  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon61))

% Have these 10 positive seeds: 11 97 112 114 169 219 240 359 462 475
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon61))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #1 @ 2:12:51 5/29/24.  [Using 3,673,280 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.7177726688187552;  // std dev = 0.347, 691.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=594 */
%   else return 0.8407692559551226;  // std dev = 0.131, 748.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=735 */


% Clauses:

recommendation(A, B, 0.7177726688187552) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.8407692559551226) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.7177726688187552) :-  /* #neg=97 #pos=594 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.8407692559551226) :-  /* #neg=13 #pos=735 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 1 trees is 209 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.017077625897239823
Set score:0.0025
% Only 1439 out of 1439 converged.
% Kept 1,329 of the 1,329 positive examples.
% Kept 110 of the 110 negative examples.
% Dataset size: 1,439
Computing probabilities
prob time:4 milliseconds
No hidden examples for : recommendation
Time to build dataset: 49 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06927132471662306
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 273 416 454 629 646 738 760 1149 1291 1433
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -96.157568): recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]' score=-96.15756757189449
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157569 (regressionFit = 96.157566, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
Comparing variance: 0.12067077014582964 to score=0.0025 #egs=691.0
Comparing variance: 0.01707762589722756 to score=0.0025 #egs=748.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 691.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.120671)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.120671) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 748.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017078) into the LAST position (#2) in the search queue.

% Time for loop #1: 28 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% This clause covers 691 positive examples, of which 691 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]'
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 85 154 209 349 398 465 495 558 572 579
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-96.15756757189449
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -96.1576):
%  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon287))

% Have these 10 positive seeds: 203 209 211 253 290 300 326 396 505 526
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon287))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #2 @ 2:12:51 5/29/24.  [Using 3,972,680 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.6065389873432717;  // std dev = 0.347, 691.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=594 */
%   else return 0.7055880816896967;  // std dev = 0.131, 748.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=735 */


% Clauses:

recommendation(A, B, 0.6065389873432717) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.7055880816896967) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.6065389873432717) :-  /* #neg=97 #pos=594 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.7055880816896967) :-  /* #neg=13 #pos=735 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 2 trees is 341 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.017077625897227444
Set score:0.0025
% Only 1439 out of 1439 converged.
% Kept 1,329 of the 1,329 positive examples.
% Kept 110 of the 110 negative examples.
% Dataset size: 1,439
Computing probabilities
prob time:18 milliseconds
No hidden examples for : recommendation
Time to build dataset: 43 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06802262358290456
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 26 110 264 442 468 476 601 772 790 1060
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -96.157568): recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]' score=-96.1575675718857
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 1 bad extensions.

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
Comparing variance: 0.12067077014582955 to score=0.0025 #egs=691.0
Comparing variance: 0.01707762589721589 to score=0.0025 #egs=748.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 691.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.120671)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.120671) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 748.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017078) into the LAST position (#2) in the search queue.

% Time for loop #1: 19 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% This clause covers 691 positive examples, of which 691 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]'
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Have these 6 positive seeds: 22 245 341 486 494 605
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-96.1575675718857
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -96.1576):
%  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon513))

% Have these 7 positive seeds: 62 111 115 159 240 267 486
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon513))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #3 @ 2:12:51 5/29/24.  [Using 4,207,168 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.4763529580933742;  // std dev = 0.347, 691.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=594 */
%   else return 0.5456932010885961;  // std dev = 0.131, 748.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=735 */


% Clauses:

recommendation(A, B, 0.4763529580933742) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.5456932010885961) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.4763529580933742) :-  /* #neg=97 #pos=594 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.5456932010885961) :-  /* #neg=13 #pos=735 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 3 trees is 462 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.017077625897215842
Set score:0.0025
% Only 1439 out of 1439 converged.
% Kept 1,329 of the 1,329 positive examples.
% Kept 110 of the 110 negative examples.
% Dataset size: 1,439
Computing probabilities
prob time:10 milliseconds
No hidden examples for : recommendation
Time to build dataset: 22 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.0674632127174857
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 177 252 399 602 782 980 1063 1136 1356 1373
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -96.157568): recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]' score=-96.15756757188508
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157569 (regressionFit = 96.157566, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
Comparing variance: 0.12067077014582935 to score=0.0025 #egs=691.0
Comparing variance: 0.017077625897215246 to score=0.0025 #egs=748.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 691.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.120671)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.120671) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 748.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017078) into the LAST position (#2) in the search queue.

% Time for loop #1: 10 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% This clause covers 691 positive examples, of which 691 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]'
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 35 38 176 284 399 413 425 614 626 646
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-96.15756757188508
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -96.1576):
%  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon723))

% Have these 10 positive seeds: 20 148 205 263 291 322 437 450 466 500
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon723))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #4 @ 2:12:51 5/29/24.  [Using 4,219,928 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.3594575801615111;  // std dev = 0.347, 691.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=594 */
%   else return 0.4101222563681758;  // std dev = 0.131, 748.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=735 */


% Clauses:

recommendation(A, B, 0.3594575801615111) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.4101222563681758) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.3594575801615111) :-  /* #neg=97 #pos=594 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.4101222563681758) :-  /* #neg=13 #pos=735 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 4 trees is 542 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.01707762589721523
Set score:0.0025
% Only 1439 out of 1439 converged.
% Kept 1,329 of the 1,329 positive examples.
% Kept 110 of the 110 negative examples.
% Dataset size: 1,439
Computing probabilities
prob time:9 milliseconds
No hidden examples for : recommendation
Time to build dataset: 21 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06729258422231188
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 71 304 323 351 398 536 622 708 712 869
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -96.157568): recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]' score=-96.15756757189416
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157569 (regressionFit = 96.157566, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
Comparing variance: 0.1206707701458318 to score=0.0025 #egs=691.0
Comparing variance: 0.017077625897225127 to score=0.0025 #egs=748.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 691.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.120671)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.120671) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 748.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017078) into the LAST position (#2) in the search queue.

% Time for loop #1: 11 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% This clause covers 691 positive examples, of which 691 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]'
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Have these 6 positive seeds: 1 3 96 275 474 516
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-96.15756757189416
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -96.1576):
%  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon949))

% Have these 10 positive seeds: 22 38 56 124 292 358 407 416 482 501
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon949))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #5 @ 2:12:51 5/29/24.  [Using 4,224,648 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.2705537201598595;  // std dev = 0.347, 691.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=594 */
%   else return 0.31395098821214035;  // std dev = 0.131, 748.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=735 */


% Clauses:

recommendation(A, B, 0.2705537201598595) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.31395098821214035) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.2705537201598595) :-  /* #neg=97 #pos=594 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.31395098821214035) :-  /* #neg=13 #pos=735 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 5 trees is 614 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.01707762589722514
Set score:0.0025
% Only 1439 out of 1439 converged.
% Kept 1,329 of the 1,329 positive examples.
% Kept 110 of the 110 negative examples.
% Dataset size: 1,439
Computing probabilities
prob time:9 milliseconds
No hidden examples for : recommendation
Time to build dataset: 20 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06725077349114295
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 9 positive seeds: 124 131 402 504 521 530 562 729 1081
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -96.157568): recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]' score=-96.15756757189067
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157569 (regressionFit = 96.157566, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
Comparing variance: 0.1206707701458278 to score=0.0025 #egs=691.0
Comparing variance: 0.017077625897224138 to score=0.0025 #egs=748.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 691.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.120671)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.120671) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 748.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017078) into the LAST position (#2) in the search queue.

% Time for loop #1: 11 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% This clause covers 691 positive examples, of which 691 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]'
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 86 129 171 179 208 392 418 555 556 623
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-96.15756757189067
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -96.1576):
%  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon1175))

% Have these 7 positive seeds: 205 213 347 465 519 574 731
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon1175))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #6 @ 2:12:51 5/29/24.  [Using 4,242,344 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.20698102574920246;  // std dev = 0.347, 691.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=594 */
%   else return 0.2484034487839756;  // std dev = 0.131, 748.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=735 */


% Clauses:

recommendation(A, B, 0.20698102574920246) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.2484034487839756) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.20698102574920246) :-  /* #neg=97 #pos=594 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.2484034487839756) :-  /* #neg=13 #pos=735 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 6 trees is 691 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.017077625897224127
Set score:0.0025
% Only 1439 out of 1439 converged.
% Kept 1,329 of the 1,329 positive examples.
% Kept 110 of the 110 negative examples.
% Dataset size: 1,439
Computing probabilities
prob time:12 milliseconds
No hidden examples for : recommendation
Time to build dataset: 35 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06724543885127199
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 7 positive seeds: 12 76 441 682 762 815 1024
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -96.157568): recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]' score=-96.15756757188939
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157569 (regressionFit = 96.157566, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
Comparing variance: 0.12067077014582765 to score=0.0025 #egs=691.0
Comparing variance: 0.017077625897222583 to score=0.0025 #egs=748.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 691.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.120671)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.120671) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 748.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017078) into the LAST position (#2) in the search queue.

% Time for loop #1: 19 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% This clause covers 691 positive examples, of which 691 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]'
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 51 162 198 241 256 274 311 336 342 349
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-96.15756757188939
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -96.1576):
%  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon1401))

% Have these 10 positive seeds: 23 30 91 198 331 346 407 469 536 739
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon1401))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #7 @ 2:12:51 5/29/24.  [Using 4,248,944 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.16165222251991482;  // std dev = 0.347, 691.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=594 */
%   else return 0.20281585983917852;  // std dev = 0.131, 748.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=735 */


% Clauses:

recommendation(A, B, 0.16165222251991482) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.20281585983917852) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.16165222251991482) :-  /* #neg=97 #pos=594 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.20281585983917852) :-  /* #neg=13 #pos=735 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 7 trees is 802 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.017077625897222587
Set score:0.0025
% Only 1439 out of 1439 converged.
% Kept 1,329 of the 1,329 positive examples.
% Kept 110 of the 110 negative examples.
% Dataset size: 1,439
Computing probabilities
prob time:22 milliseconds
No hidden examples for : recommendation
Time to build dataset: 36 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06724754711574499
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 38 144 178 217 316 391 588 682 728 1143
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -96.157568): recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]' score=-96.15756757189064
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157569 (regressionFit = 96.157566, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
Comparing variance: 0.12067077014582787 to score=0.0025 #egs=691.0
Comparing variance: 0.017077625897224037 to score=0.0025 #egs=748.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 691.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.120671)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.120671) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 748.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017078) into the LAST position (#2) in the search queue.

% Time for loop #1: 13 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% This clause covers 691 positive examples, of which 691 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]'
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 5 143 149 286 390 400 434 480 526 533
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-96.15756757189064
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -96.1576):
%  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon1627))

% Have these 3 positive seeds: 23 521 640
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon1627))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #8 @ 2:12:52 5/29/24.  [Using 4,288,312 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.12870100359692618;  // std dev = 0.347, 691.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=594 */
%   else return 0.16996710769776943;  // std dev = 0.131, 748.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=735 */


% Clauses:

recommendation(A, B, 0.12870100359692618) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.16996710769776943) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.12870100359692618) :-  /* #neg=97 #pos=594 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.16996710769776943) :-  /* #neg=13 #pos=735 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 8 trees is 894 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.01707762589722404
Set score:0.0025
% Only 1439 out of 1439 converged.
% Kept 1,329 of the 1,329 positive examples.
% Kept 110 of the 110 negative examples.
% Dataset size: 1,439
Computing probabilities
prob time:11 milliseconds
No hidden examples for : recommendation
Time to build dataset: 23 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06724823494179025
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 7 positive seeds: 54 218 324 369 447 1184 1347
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -96.157568): recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]' score=-96.15756757189021
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157569 (regressionFit = 96.157566, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
Comparing variance: 0.12067077014582797 to score=0.0025 #egs=691.0
Comparing variance: 0.017077625897223385 to score=0.0025 #egs=748.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 691.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.120671)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.120671) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 748.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017078) into the LAST position (#2) in the search queue.

% Time for loop #1: 7 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% This clause covers 691 positive examples, of which 691 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]'
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Have these 9 positive seeds: 16 50 70 156 158 391 438 548 549
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-96.15756757189021
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -96.1576):
%  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon1853))

% Have these 10 positive seeds: 99 183 249 377 395 396 436 440 493 569
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon1853))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #9 @ 2:12:52 5/29/24.  [Using 4,291,272 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.1041522382743206;  // std dev = 0.347, 691.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=594 */
%   else return 0.1454517173929011;  // std dev = 0.131, 748.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=735 */


% Clauses:

recommendation(A, B, 0.1041522382743206) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.1454517173929011) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.1041522382743206) :-  /* #neg=97 #pos=594 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.1454517173929011) :-  /* #neg=13 #pos=735 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 9 trees is 966 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.01707762589722339
Set score:0.0025
% Only 1439 out of 1439 converged.
% Kept 1,329 of the 1,329 positive examples.
% Kept 110 of the 110 negative examples.
% Dataset size: 1,439
Computing probabilities
prob time:11 milliseconds
No hidden examples for : recommendation
Time to build dataset: 22 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06724527857194397
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 100 185 337 417 493 742 751 878 913 1183
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -96.157568): recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]' score=-96.15756757189006
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157569 (regressionFit = 96.157566, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
Comparing variance: 0.1206707701458284 to score=0.0025 #egs=691.0
Comparing variance: 0.017077625897222767 to score=0.0025 #egs=748.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 691.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.120671)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.120671) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 748.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017078) into the LAST position (#2) in the search queue.

% Time for loop #1: 9 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% This clause covers 691 positive examples, of which 691 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]'
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 52 136 210 263 308 377 476 590 672 673
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-96.15756757189006
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -96.1576):
%  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon2079))

% Have these 7 positive seeds: 59 113 323 361 626 666 697
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon2079))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #10 @ 2:12:52 5/29/24.  [Using 4,297,000 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.08542691215923782;  // std dev = 0.347, 691.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=594 */
%   else return 0.1265827490786316;  // std dev = 0.131, 748.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=735 */


% Clauses:

recommendation(A, B, 0.08542691215923782) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.1265827490786316) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.08542691215923782) :-  /* #neg=97 #pos=594 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.1265827490786316) :-  /* #neg=13 #pos=735 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Saving model in: train/models/bRDNs/recommendation.model
% Time taken to learn 10 trees is 1.043 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.017077625897222767
Set score:0.0025
% Only 1439 out of 1439 converged.
% Kept 1,329 of the 1,329 positive examples.
% Kept 110 of the 110 negative examples.
% Dataset size: 1,439
Computing probabilities
prob time:13 milliseconds
No hidden examples for : recommendation
Time to build dataset: 24 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.0672386397487936
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 55 87 148 193 382 403 704 1094 1109 1115
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -96.157568): recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]' score=-96.15756757189003
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157569 (regressionFit = 96.157566, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
Comparing variance: 0.12067077014582821 to score=0.0025 #egs=691.0
Comparing variance: 0.017077625897222927 to score=0.0025 #egs=748.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 691.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.120671)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.120671) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 748.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017078) into the LAST position (#2) in the search queue.

% Time for loop #1: 15 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% This clause covers 691 positive examples, of which 691 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]'
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 2 17 28 45 67 85 128 155 288 397
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-96.15756757189003
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -96.1576):
%  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon2305))

% Have these 10 positive seeds: 2 30 62 86 205 241 255 277 346 422
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon2305))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 2:12:52 5/29/24.  [Using 4,300,736 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.07084338164787732;  // std dev = 0.347, 691.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=594 */
%   else return 0.11167481425439783;  // std dev = 0.131, 748.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=735 */


% Clauses:

recommendation(A, B, 0.07084338164787732) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.11167481425439783) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.07084338164787732) :-  /* #neg=97 #pos=594 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.11167481425439783) :-  /* #neg=13 #pos=735 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 11 trees is 1.146 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.017077625897222927
Set score:0.0025
% Only 1439 out of 1439 converged.
% Kept 1,329 of the 1,329 positive examples.
% Kept 110 of the 110 negative examples.
% Dataset size: 1,439
Computing probabilities
prob time:19 milliseconds
No hidden examples for : recommendation
Time to build dataset: 30 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.0672289268813844
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 46 164 175 204 648 833 1426 1438
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -96.157568): recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]' score=-96.15756757189
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157569 (regressionFit = 96.157566, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
Comparing variance: 0.12067077014582818 to score=0.0025 #egs=691.0
Comparing variance: 0.0170776258972229 to score=0.0025 #egs=748.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 691.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.120671)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.120671) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 748.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017078) into the LAST position (#2) in the search queue.

% Time for loop #1: 9 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% This clause covers 691 positive examples, of which 691 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]'
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Have these 5 positive seeds: 402 444 459 581 680
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-96.15756757189
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -96.1576):
%  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon2531))

% Have these 10 positive seeds: 19 42 109 131 144 153 171 188 197 289
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon2531))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #12 @ 2:12:52 5/29/24.  [Using 4,336,240 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.05928181920341049;  // std dev = 0.347, 691.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=594 */
%   else return 0.09963393642899895;  // std dev = 0.131, 748.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=735 */


% Clauses:

recommendation(A, B, 0.05928181920341049) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.09963393642899895) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.05928181920341049) :-  /* #neg=97 #pos=594 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.09963393642899895) :-  /* #neg=13 #pos=735 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 12 trees is 1.234 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.0170776258972229
Set score:0.0025
% Only 1439 out of 1439 converged.
% Kept 1,329 of the 1,329 positive examples.
% Kept 110 of the 110 negative examples.
% Dataset size: 1,439
Computing probabilities
prob time:25 milliseconds
No hidden examples for : recommendation
Time to build dataset: 38 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06721686029437587
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 7 positive seeds: 394 417 735 901 923 1040 1381
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -96.157568): recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]' score=-96.15756757188983
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157569 (regressionFit = 96.157566, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
Comparing variance: 0.12067077014582771 to score=0.0025 #egs=691.0
Comparing variance: 0.017077625897223107 to score=0.0025 #egs=748.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 691.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.120671)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.120671) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 748.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017078) into the LAST position (#2) in the search queue.

% Time for loop #1: 13 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% This clause covers 691 positive examples, of which 691 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]'
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 54 101 119 244 261 344 419 485 487 535
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-96.15756757188983
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -96.1576):
%  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon2757))

% Have these 5 positive seeds: 9 405 482 540 737
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon2757))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #13 @ 2:12:52 5/29/24.  [Using 4,338,472 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.04997728690357064;  // std dev = 0.347, 691.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=594 */
%   else return 0.08972588646052149;  // std dev = 0.131, 748.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=735 */


% Clauses:

recommendation(A, B, 0.04997728690357064) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.08972588646052149) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.04997728690357064) :-  /* #neg=97 #pos=594 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.08972588646052149) :-  /* #neg=13 #pos=735 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 13 trees is 1.340 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.017077625897223107
Set score:0.0025
% Only 1439 out of 1439 converged.
% Kept 1,329 of the 1,329 positive examples.
% Kept 110 of the 110 negative examples.
% Dataset size: 1,439
Computing probabilities
prob time:16 milliseconds
No hidden examples for : recommendation
Time to build dataset: 26 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06720309711617617
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 70 212 215 443 473 605 690 711 761 807
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -96.157568): recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]' score=-96.15756757188952
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157569 (regressionFit = 96.157566, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
Comparing variance: 0.1206707701458274 to score=0.0025 #egs=691.0
Comparing variance: 0.01707762589722298 to score=0.0025 #egs=748.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 691.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.120671)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.120671) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 748.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017078) into the LAST position (#2) in the search queue.

% Time for loop #1: 7 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% This clause covers 691 positive examples, of which 691 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]'
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 44 158 163 256 423 425 430 437 512 519
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-96.15756757188952
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -96.1576):
%  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon2983))

% Have these 10 positive seeds: 16 69 90 123 215 219 223 360 377 402
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon2983))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #14 @ 2:12:52 5/29/24.  [Using 4,340,992 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.04239376905778284;  // std dev = 0.347, 691.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=594 */
%   else return 0.08144260949464718;  // std dev = 0.131, 748.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=735 */


% Clauses:

recommendation(A, B, 0.04239376905778284) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.08144260949464718) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.04239376905778284) :-  /* #neg=97 #pos=594 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.08144260949464718) :-  /* #neg=13 #pos=735 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 14 trees is 1.434 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.017077625897222976
Set score:0.0025
% Only 1439 out of 1439 converged.
% Kept 1,329 of the 1,329 positive examples.
% Kept 110 of the 110 negative examples.
% Dataset size: 1,439
Computing probabilities
prob time:25 milliseconds
No hidden examples for : recommendation
Time to build dataset: 37 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06718818610349514
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 72 122 362 401 541 686 753 813 887 961
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -96.157568): recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]' score=-96.15756757188983
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 1 bad extensions.

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
Comparing variance: 0.12067077014582767 to score=0.0025 #egs=691.0
Comparing variance: 0.017077625897223146 to score=0.0025 #egs=748.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 691.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.120671)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.120671) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 748.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017078) into the LAST position (#2) in the search queue.

% Time for loop #1: 8 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% This clause covers 691 positive examples, of which 691 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]'
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Have these 8 positive seeds: 94 116 307 364 486 573 599 610
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-96.15756757188983
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -96.1576):
%  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon3209))

% Have these 7 positive seeds: 23 55 182 311 514 576 633
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon3209))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #15 @ 2:12:52 5/29/24.  [Using 4,343,920 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.03614656894662044;  // std dev = 0.347, 691.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=594 */
%   else return 0.07442285611037076;  // std dev = 0.131, 748.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=735 */


% Clauses:

recommendation(A, B, 0.03614656894662044) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.07442285611037076) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.03614656894662044) :-  /* #neg=97 #pos=594 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.07442285611037076) :-  /* #neg=13 #pos=735 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 15 trees is 1.536 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.017077625897223146
Set score:0.0025
% Only 1439 out of 1439 converged.
% Kept 1,329 of the 1,329 positive examples.
% Kept 110 of the 110 negative examples.
% Dataset size: 1,439
Computing probabilities
prob time:20 milliseconds
No hidden examples for : recommendation
Time to build dataset: 35 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06717256784696767
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 87 130 176 345 379 647 655 784 833 908
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -96.157568): recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]' score=-96.15756757188994
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157569 (regressionFit = 96.157566, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
Comparing variance: 0.12067077014582779 to score=0.0025 #egs=691.0
Comparing variance: 0.017077625897223177 to score=0.0025 #egs=748.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 691.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.120671)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.120671) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 748.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017078) into the LAST position (#2) in the search queue.

% Time for loop #1: 8 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% This clause covers 691 positive examples, of which 691 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]'
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Have these 8 positive seeds: 20 22 169 432 619 639 651 689
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-96.15756757188994
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -96.1576):
%  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon3419))

% Have these 10 positive seeds: 64 233 245 286 293 299 343 354 432 472
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon3419))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #16 @ 2:12:52 5/29/24.  [Using 4,346,880 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.03095349831460777;  // std dev = 0.347, 691.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=594 */
%   else return 0.0684035044233846;  // std dev = 0.131, 748.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=735 */


% Clauses:

recommendation(A, B, 0.03095349831460777) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.0684035044233846) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.03095349831460777) :-  /* #neg=97 #pos=594 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.0684035044233846) :-  /* #neg=13 #pos=735 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 16 trees is 1.643 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.017077625897223177
Set score:0.0025
% Only 1439 out of 1439 converged.
% Kept 1,329 of the 1,329 positive examples.
% Kept 110 of the 110 negative examples.
% Dataset size: 1,439
Computing probabilities
prob time:26 milliseconds
No hidden examples for : recommendation
Time to build dataset: 38 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06715658888959844
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 29 71 168 289 320 337 444 525 1172 1225
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -96.157568): recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]' score=-96.15756757189037
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157569 (regressionFit = 96.157566, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
Comparing variance: 0.12067077014582835 to score=0.0025 #egs=691.0
Comparing variance: 0.017077625897223253 to score=0.0025 #egs=748.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 691.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.120671)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.120671) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 748.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017078) into the LAST position (#2) in the search queue.

% Time for loop #1: 10 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% This clause covers 691 positive examples, of which 691 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]'
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 30 83 195 357 380 417 423 426 454 513
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-96.15756757189037
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -96.1576):
%  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon3645))

% Have these 8 positive seeds: 107 188 273 469 526 608 718 738
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon3645))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #17 @ 2:12:52 5/29/24.  [Using 4,349,280 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.02660345076225781;  // std dev = 0.347, 691.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=594 */
%   else return 0.06318878505537366;  // std dev = 0.131, 748.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=735 */


% Clauses:

recommendation(A, B, 0.02660345076225781) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.06318878505537366) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.02660345076225781) :-  /* #neg=97 #pos=594 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.06318878505537366) :-  /* #neg=13 #pos=735 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 17 trees is 1.742 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.01707762589722325
Set score:0.0025
% Only 1439 out of 1439 converged.
% Kept 1,329 of the 1,329 positive examples.
% Kept 110 of the 110 negative examples.
% Dataset size: 1,439
Computing probabilities
prob time:39 milliseconds
No hidden examples for : recommendation
Time to build dataset: 54 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06714051826862164
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 9 positive seeds: 31 242 645 660 676 820 1109 1195 1365
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -96.157568): recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]' score=-96.15756757189025
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157569 (regressionFit = 96.157566, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
Comparing variance: 0.12067077014582821 to score=0.0025 #egs=691.0
Comparing variance: 0.017077625897223222 to score=0.0025 #egs=748.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 691.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.120671)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.120671) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 748.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017078) into the LAST position (#2) in the search queue.

% Time for loop #1: 7 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% This clause covers 691 positive examples, of which 691 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]'
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 121 146 279 396 401 417 427 447 567 626
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-96.15756757189025
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -96.1576):
%  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon3871))

% Have these 10 positive seeds: 89 168 252 286 352 353 372 399 585 595
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon3871))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #18 @ 2:12:53 5/29/24.  [Using 4,402,880 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.02293568832253503;  // std dev = 0.347, 691.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=594 */
%   else return 0.05863027029951525;  // std dev = 0.131, 748.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=735 */


% Clauses:

recommendation(A, B, 0.02293568832253503) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.05863027029951525) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.02293568832253503) :-  /* #neg=97 #pos=594 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.05863027029951525) :-  /* #neg=13 #pos=735 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 18 trees is 1.869 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.017077625897223222
Set score:0.0025
% Only 1439 out of 1439 converged.
% Kept 1,329 of the 1,329 positive examples.
% Kept 110 of the 110 negative examples.
% Dataset size: 1,439
Computing probabilities
prob time:23 milliseconds
No hidden examples for : recommendation
Time to build dataset: 34 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.06712456260666316
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 299 319 396 719 724 818 1042 1388
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -96.157568): recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]' score=-96.15756757188969
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157569 (regressionFit = 96.157566, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
Comparing variance: 0.12067077014582749 to score=0.0025 #egs=691.0
Comparing variance: 0.017077625897223125 to score=0.0025 #egs=748.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 691.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.120671)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.120671) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 748.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017078) into the LAST position (#2) in the search queue.

% Time for loop #1: 7 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% This clause covers 691 positive examples, of which 691 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]'
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 46 66 69 80 143 186 330 375 379 438
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-96.15756757188969
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -96.1576):
%  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon4097))

% Have these 10 positive seeds: 67 81 218 248 261 331 398 417 514 536
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon4097))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #19 @ 2:12:53 5/29/24.  [Using 4,405,632 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.019825880061191993;  // std dev = 0.347, 691.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=594 */
%   else return 0.054613524971170314;  // std dev = 0.131, 748.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=735 */


% Clauses:

recommendation(A, B, 0.019825880061191993) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.054613524971170314) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.019825880061191993) :-  /* #neg=97 #pos=594 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.054613524971170314) :-  /* #neg=13 #pos=735 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Time taken to learn 19 trees is 1.969 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.017077625897223128
Set score:0.0025
% Only 1439 out of 1439 converged.
% Kept 1,329 of the 1,329 positive examples.
% Kept 110 of the 110 negative examples.
% Dataset size: 1,439
Computing probabilities
prob time:48 milliseconds
No hidden examples for : recommendation
Time to build dataset: 65 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.0671088787520744
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 7 positive seeds: 355 566 774 959 999 1121 1160
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 1,439.0/1,439.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -96.157568): recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]' score=-96.15756757189008
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -96.157569 (regressionFit = 96.157566, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
Comparing variance: 0.12067077014582796 to score=0.0025 #egs=691.0
Comparing variance: 0.017077625897223236 to score=0.0025 #egs=748.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 691.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.120671)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -0.120671) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 748.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0.017078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0.017078) into the LAST position (#2) in the search queue.

% Time for loop #1: 14 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 691.0/1,439.0 pos, 0.0/0.0 neg]
% This clause covers 691 positive examples, of which 691 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]'
%     Score = -96.157568 (regressionFit = 96.157566, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 63 85 98 177 266 394 430 489 515 567
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-96.15756757189008
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -96.1576):
%  recommendation(_, A) :- item(A, _).  [covers 691.0/691.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon4323))

% Have these 9 positive seeds: 33 87 116 134 330 332 469 608 671
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 748.0/748.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon4323))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #20 @ 2:12:53 5/29/24.  [Using 4,408,008 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 0.017176492488304808;  // std dev = 0.347, 691.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=594 */
%   else return 0.05104899213472817;  // std dev = 0.131, 748.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=735 */


% Clauses:

recommendation(A, B, 0.017176492488304808) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 0.05104899213472817) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 0.017176492488304808) :-  /* #neg=97 #pos=594 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 0.05104899213472817) :-  /* #neg=13 #pos=735 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Saving model in: train/models/bRDNs/recommendation.model.ckpt
% Saving model in: train/models/bRDNs/recommendation.model


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for recommendation.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).
stepLength_tree4(1.0).
stepLength_tree5(1.0).
stepLength_tree6(1.0).
stepLength_tree7(1.0).
stepLength_tree8(1.0).
stepLength_tree9(1.0).
stepLength_tree10(1.0).
stepLength_tree11(1.0).
stepLength_tree12(1.0).
stepLength_tree13(1.0).
stepLength_tree14(1.0).
stepLength_tree15(1.0).
stepLength_tree16(1.0).
stepLength_tree17(1.0).
stepLength_tree18(1.0).
stepLength_tree19(1.0).
stepLength_tree20(1.0).

logPrior(-1.8).
recommendation(A, B, Total) :- // A general accessor. 
   recommendation(A, B, 1000000, Total), !.
recommendation(A, B, Total) :- waitHere("This should not fail", recommendation(A, B, Total)).

recommendation(A, B, TreesToUse, Total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(LogPrior),
   getScore_recommendation_tree1(A, B, TreesToUse, Total1),
   getScore_recommendation_tree2(A, B, TreesToUse, Total2),
   getScore_recommendation_tree3(A, B, TreesToUse, Total3),
   getScore_recommendation_tree4(A, B, TreesToUse, Total4),
   getScore_recommendation_tree5(A, B, TreesToUse, Total5),
   getScore_recommendation_tree6(A, B, TreesToUse, Total6),
   getScore_recommendation_tree7(A, B, TreesToUse, Total7),
   getScore_recommendation_tree8(A, B, TreesToUse, Total8),
   getScore_recommendation_tree9(A, B, TreesToUse, Total9),
   getScore_recommendation_tree10(A, B, TreesToUse, Total10),
   getScore_recommendation_tree11(A, B, TreesToUse, Total11),
   getScore_recommendation_tree12(A, B, TreesToUse, Total12),
   getScore_recommendation_tree13(A, B, TreesToUse, Total13),
   getScore_recommendation_tree14(A, B, TreesToUse, Total14),
   getScore_recommendation_tree15(A, B, TreesToUse, Total15),
   getScore_recommendation_tree16(A, B, TreesToUse, Total16),
   getScore_recommendation_tree17(A, B, TreesToUse, Total17),
   getScore_recommendation_tree18(A, B, TreesToUse, Total18),
   getScore_recommendation_tree19(A, B, TreesToUse, Total19),
   getScore_recommendation_tree20(A, B, TreesToUse, Total20),
   Total is LogPrior + Total1 + Total2 + Total3 + Total4 + Total5 + Total6 + Total7 + Total8 + Total9 + Total10 + Total11 + Total12 + Total13 + Total14 + Total15 + Total16 + Total17 + Total18 + Total19 + Total20,
   !.
recommendation(A, B, TreesToUse, Total) :- waitHere("This should not fail", recommendation(A, B, TreesToUse, Total)).

getScore_recommendation_tree1(A, B, TreesToUse, 0.0) :- 1 > TreesToUse, !.
getScore_recommendation_tree1(A, B, TreesToUse, Total1) :- recommendation_tree1(A, B, Total), stepLength_tree1(StepLen), Total1 is Total * StepLen.

getScore_recommendation_tree2(A, B, TreesToUse, 0.0) :- 2 > TreesToUse, !.
getScore_recommendation_tree2(A, B, TreesToUse, Total2) :- recommendation_tree2(A, B, Total), stepLength_tree2(StepLen), Total2 is Total * StepLen.

getScore_recommendation_tree3(A, B, TreesToUse, 0.0) :- 3 > TreesToUse, !.
getScore_recommendation_tree3(A, B, TreesToUse, Total3) :- recommendation_tree3(A, B, Total), stepLength_tree3(StepLen), Total3 is Total * StepLen.

getScore_recommendation_tree4(A, B, TreesToUse, 0.0) :- 4 > TreesToUse, !.
getScore_recommendation_tree4(A, B, TreesToUse, Total4) :- recommendation_tree4(A, B, Total), stepLength_tree4(StepLen), Total4 is Total * StepLen.

getScore_recommendation_tree5(A, B, TreesToUse, 0.0) :- 5 > TreesToUse, !.
getScore_recommendation_tree5(A, B, TreesToUse, Total5) :- recommendation_tree5(A, B, Total), stepLength_tree5(StepLen), Total5 is Total * StepLen.

getScore_recommendation_tree6(A, B, TreesToUse, 0.0) :- 6 > TreesToUse, !.
getScore_recommendation_tree6(A, B, TreesToUse, Total6) :- recommendation_tree6(A, B, Total), stepLength_tree6(StepLen), Total6 is Total * StepLen.

getScore_recommendation_tree7(A, B, TreesToUse, 0.0) :- 7 > TreesToUse, !.
getScore_recommendation_tree7(A, B, TreesToUse, Total7) :- recommendation_tree7(A, B, Total), stepLength_tree7(StepLen), Total7 is Total * StepLen.

getScore_recommendation_tree8(A, B, TreesToUse, 0.0) :- 8 > TreesToUse, !.
getScore_recommendation_tree8(A, B, TreesToUse, Total8) :- recommendation_tree8(A, B, Total), stepLength_tree8(StepLen), Total8 is Total * StepLen.

getScore_recommendation_tree9(A, B, TreesToUse, 0.0) :- 9 > TreesToUse, !.
getScore_recommendation_tree9(A, B, TreesToUse, Total9) :- recommendation_tree9(A, B, Total), stepLength_tree9(StepLen), Total9 is Total * StepLen.

getScore_recommendation_tree10(A, B, TreesToUse, 0.0) :- 10 > TreesToUse, !.
getScore_recommendation_tree10(A, B, TreesToUse, Total10) :- recommendation_tree10(A, B, Total), stepLength_tree10(StepLen), Total10 is Total * StepLen.

getScore_recommendation_tree11(A, B, TreesToUse, 0.0) :- 11 > TreesToUse, !.
getScore_recommendation_tree11(A, B, TreesToUse, Total11) :- recommendation_tree11(A, B, Total), stepLength_tree11(StepLen), Total11 is Total * StepLen.

getScore_recommendation_tree12(A, B, TreesToUse, 0.0) :- 12 > TreesToUse, !.
getScore_recommendation_tree12(A, B, TreesToUse, Total12) :- recommendation_tree12(A, B, Total), stepLength_tree12(StepLen), Total12 is Total * StepLen.

getScore_recommendation_tree13(A, B, TreesToUse, 0.0) :- 13 > TreesToUse, !.
getScore_recommendation_tree13(A, B, TreesToUse, Total13) :- recommendation_tree13(A, B, Total), stepLength_tree13(StepLen), Total13 is Total * StepLen.

getScore_recommendation_tree14(A, B, TreesToUse, 0.0) :- 14 > TreesToUse, !.
getScore_recommendation_tree14(A, B, TreesToUse, Total14) :- recommendation_tree14(A, B, Total), stepLength_tree14(StepLen), Total14 is Total * StepLen.

getScore_recommendation_tree15(A, B, TreesToUse, 0.0) :- 15 > TreesToUse, !.
getScore_recommendation_tree15(A, B, TreesToUse, Total15) :- recommendation_tree15(A, B, Total), stepLength_tree15(StepLen), Total15 is Total * StepLen.

getScore_recommendation_tree16(A, B, TreesToUse, 0.0) :- 16 > TreesToUse, !.
getScore_recommendation_tree16(A, B, TreesToUse, Total16) :- recommendation_tree16(A, B, Total), stepLength_tree16(StepLen), Total16 is Total * StepLen.

getScore_recommendation_tree17(A, B, TreesToUse, 0.0) :- 17 > TreesToUse, !.
getScore_recommendation_tree17(A, B, TreesToUse, Total17) :- recommendation_tree17(A, B, Total), stepLength_tree17(StepLen), Total17 is Total * StepLen.

getScore_recommendation_tree18(A, B, TreesToUse, 0.0) :- 18 > TreesToUse, !.
getScore_recommendation_tree18(A, B, TreesToUse, Total18) :- recommendation_tree18(A, B, Total), stepLength_tree18(StepLen), Total18 is Total * StepLen.

getScore_recommendation_tree19(A, B, TreesToUse, 0.0) :- 19 > TreesToUse, !.
getScore_recommendation_tree19(A, B, TreesToUse, Total19) :- recommendation_tree19(A, B, Total), stepLength_tree19(StepLen), Total19 is Total * StepLen.

getScore_recommendation_tree20(A, B, TreesToUse, 0.0) :- 20 > TreesToUse, !.
getScore_recommendation_tree20(A, B, TreesToUse, Total20) :- recommendation_tree20(A, B, Total), stepLength_tree20(StepLen), Total20 is Total * StepLen.

flattenedLiteralsInThisSetOfTrees(recommendation, 1, [
   item(a, underscore)]).
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1.797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1.797693135e+308) into the LAST position (#1) in the search queue.
Variance:26.963079984478888
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 90 440 2432 5758 8665 10137 14131 16195 17643 18236
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 28,780.0/28,780.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 28,780.0/28,780.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'recommendation(_, _).  [covers 28,780.0/28,780.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -769,260.530737 (regressionFit = 769,260.530735, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 13,820.0/28,780.0 pos, 0.0/0.0 neg]
% Gleaner: New best node found (score = -769,260.530737): recommendation(_, A) :- item(A, _).  [covers 13,820.0/28,780.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 13,820.0/28,780.0 pos, 0.0/0.0 neg]' score=-769260.5307366881
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -769,260.530738 (regressionFit = 769,260.530735, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 13,820.0/28,780.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 13,820.0/28,780.0 pos, 0.0/0.0 neg]

% The best node found: recommendation(_, A) :- item(A, _).  [covers 13,820.0/28,780.0 pos, 0.0/0.0 neg]

% Expanding node at Level 0 with score = 1.797693e+308.
% Will extend: recommendation(_, A) :- item(A, _).  [covers 13,820.0/28,780.0 pos, 0.0/0.0 neg]
Comparing variance: 48.268308058341916 to score=0.0025 #egs=13820.0
Comparing variance: 6.831050358901918 to score=0.0025 #egs=14960.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 13,820.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-48.268308)
%         ILP node to extend: recommendation(_, A) :- item(A, _).  [covers 13,820.0/28,780.0 pos, 0.0/0.0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -48.268308) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 14,960.0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-6.831050)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -6.831050) into the LAST position (#2) in the search queue.

% Time for loop #1: 115 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 6
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      recommendation(_, A) :- item(A, _).  [covers 13,820.0/28,780.0 pos, 0.0/0.0 neg]
% This clause covers 13820 positive examples, of which 13820 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'recommendation(_, A) :- item(A, _).  [covers 13,820.0/13,820.0 pos, 0.0/0.0 neg]'
%     Score = -769,260.530737 (regressionFit = 769,260.530735, penalties=1.23E-6) for clause:  recommendation(_, A) :- item(A, _).  [covers 13,820.0/13,820.0 pos, 0.0/0.0 neg]

% Have these 10 positive seeds: 157 1202 3356 4322 5690 5956 7440 8693 8694 8709
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Consider expanding [#1 of outerLoop #2, bodyLen=1] 'recommendation(_, A) :- item(A, _).  [covers 13,820.0/13,820.0 pos, 0.0/0.0 neg]' score=-769260.5307366881
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 1 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _).  [covers 13,820.0/13,820.0 pos, 0.0/0.0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=2] 'recommendation(_, A) :- item(A, _), item(A, _).  [covers 13,820.0/13,820.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 2, |OPEN| = 0.  Pruned 2 variant children.  Sending 1 items to OPEN for evaluation and possible insertion.
% Have created 1 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -Infinity (regressionFit = Infinity, penalties=3.2500000000000006E-6) for clause:  recommendation(_, A) :- item(A, _), item(A, _), item(A, _).  [covers 13,820.0/13,820.0 pos, 0.0/0.0 neg]

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -769,260.5307):
%  recommendation(_, A) :- item(A, _).  [covers 13,820.0/13,820.0 pos, 0.0/0.0 neg]
Created a leaf under (recommendation(A, B) :- item(B, Anon4549))

% Have these 10 positive seeds: 481 2885 6522 7221 9003 12737 13785 13872 14326 14402
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = recommendation(A, B)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  recommendation(_, _).  [covers 14,960.0/14,960.0 pos, 0.0/0.0 neg]
% Most-general root: recommendation(_, _).  [covers 14,960.0/14,960.0 pos, 0.0/0.0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #3, bodyLen=0] 'recommendation(_, _).  [covers 14,960.0/14,960.0 pos, 0.0/0.0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 0 items to OPEN for evaluation and possible insertion.
% Have created 0 valid-on-seeds descendants and have picked up 2 bad extensions.

% The best node found: null

% No acceptable clause was learned on this cycle of the ILP inner loop (LearnOneClause).
% The closest-to-acceptable node found (score = -Infinity):
%  null
Created a leaf under (recommendation(A, B) :- item(B, Anon4549))

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree Combined @ 2:12:53 5/29/24.  [Using 4,252,824 memory cells.]  %%%%%


% FOR recommendation(A, B):
%   if ( item(B, C) )
%   then return 3.4937271525851763;  // std dev = 6.948, 13,820.000 (wgt'ed) examples reached here.  /* #neg=1,940 #pos=11,880 */
%   else return 4.462129845738782;  // std dev = 2.614, 14,960.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=14,700 */


% Clauses:

recommendation(A, B, 3.4937271525851763) :- 
     item(B, C), 
     !. // Clause #1.

recommendation(A, B, 4.462129845738782) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_recommendation(underscore, a, 3.4937271525851763) :-  /* #neg=1,940 #pos=11,880 */ 
   item(a, underscore),
   !. // Flattened version of clause #1.

flattened_recommendation(underscore, underscore, 4.462129845738782) :-  /* #neg=260 #pos=14,700 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   item(a, underscore)

% Time taken to learn model for 'recommendation': 2.422 seconds.
% Saving model in: train/models/bRDNs/recommendation.model
cached groundings hit: 0
Misses: 0

% Total learning time (20 trees): 2.618 seconds.
